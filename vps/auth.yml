version: "3.4"

services:
  postgresql:
    image: postgres:12-alpine
    restart: unless-stopped
    networks:
      - authentik
    volumes:
      - authentik-database:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${PG_PASS}
      POSTGRES_USER: postgres
      POSTGRES_DB: authentik

  redis:
    image: redis:alpine
    command: --save 60 1 --loglevel warning
    restart: unless-stopped
    networks:
      - authentik
    volumes:
      - authentik-redis:/data

  auth:
    image: ghcr.io/goauthentik/server:2023.5.3
    restart: unless-stopped
    command: server
    networks:
      - global_net
      - authentik
    environment:
      AUTHENTIK_SECRET_KEY: ${SECRET_KEY}
      AUTHENTIK_REDIS__HOST: redis
      AUTHENTIK_POSTGRESQL__HOST: postgresql
      AUTHENTIK_POSTGRESQL__USER: postgres
      AUTHENTIK_POSTGRESQL__NAME: authentik
      AUTHENTIK_POSTGRESQL__PASSWORD: ${PG_PASS}
    volumes:
      - authentik-media:/media
      - authentik-templates:/templates
    #ports:
    #  - "9000:9000"
    #  - "9443:9443"
    depends_on:
      - postgresql
      - redis
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.auth.entrypoints=https'
      - 'traefik.http.routers.authentik.rule=Host(`{{ index .Labels "com.docker.compose.service"}}.thetoto.fr`) || HostRegexp(`{subdomain:[a-z0-9-]+}.${APP_DOMAIN}`) && PathPrefix(`/outpost.goauthentik.io/`)'
      - 'traefik.http.services.auth.loadbalancer.server.port=9000'

      - 'traefik.http.middlewares.authentik.forwardauth.address=http://auth:9000/outpost.goauthentik.io/auth/traefik'
      - 'traefik.http.middlewares.authentik.forwardauth.trustForwardHeader=true'
      - 'traefik.http.middlewares.authentik.forwardauth.authResponseHeaders=X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid,X-authentik-jwt,X-authentik-meta-jwks,X-authentik-meta-outpost,X-authentik-meta-provider,X-authentik-meta-app,X-authentik-meta-version'


  worker:
    image: ghcr.io/goauthentik/server:2023.5.3
    restart: unless-stopped
    command: worker
    networks:
      - authentik
    environment:
      AUTHENTIK_SECRET_KEY: ${SECRET_KEY}
      AUTHENTIK_REDIS__HOST: redis
      AUTHENTIK_POSTGRESQL__HOST: postgresql
      AUTHENTIK_POSTGRESQL__USER: postgres
      AUTHENTIK_POSTGRESQL__NAME: authentik
      AUTHENTIK_POSTGRESQL__PASSWORD: ${PG_PASS}
    user: root
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - authentik-media:/media
      - authentik-certs:/certs
      - authentik-templates:/templates
    depends_on:
      - postgresql
      - redis

volumes:
  authentik-database:
  authentik-redis:
  authentik-certs:
  authentik-media:
  authentik-templates:

networks:
  global_net:
    external: true
  authentik: